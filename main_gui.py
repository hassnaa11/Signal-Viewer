# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'task1_test2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer  # For QTimer
from PyQt5.QtWidgets import QGridLayout  # For QGridLayout

import matplotlib
import matplotlib.pyplot as plt
from PyQt5.QtWidgets import QFileDialog
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT as Navi
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
#import pyedflib
import pyqtgraph as pg
import sys  # For system-level functions
import csv


'''class MatplotlibCanvas(FigureCanvas):
    def __init__(self, parent=None, dpi=120):
        fig = Figure(dpi=dpi)
        self.axes = fig.add_subplot(111)
        super(MatplotlibCanvas, self).__init__(fig)
        fig.tight_layout()

    def plot(self, signal_data):
        # Clear the previous plot
        self.axes.clear()
        
        # Plot each signal on the same axes
        for signal in signal_data:
            self.axes.plot(signal)  # Plot the signal data
        
        # Set plot labels and title
        self.axes.set_title('Signal Plot')
        self.axes.set_xlabel('Time')
        self.axes.set_ylabel('Amplitude')
        
        # Redraw the canvas to update the figure
        self.draw()'''
       
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1170, 1022)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(34, 40, 62);")
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonFollowStyle)
        MainWindow.setAnimated(True)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        #self.canv = MatplotlibCanvas(self)
       
   
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.graph1Widget = QtWidgets.QWidget(self.splitter)
        self.graph1Widget.setEnabled(True)  # Enable the widget
        


        self.graph1Widget.num = 0
        self.graph1Widget.graph = pg.PlotWidget(self.graph1Widget)
        self.graph1Widget.grid_graph_3 = QGridLayout()
        self.graph1Widget.timer = QTimer()
        self.graph1Widget.setLayout(self.graph1Widget.grid_graph_3)
        self.graph1Widget.grid_graph_3.addWidget(self.graph1Widget.graph, 0, 0, 1, 1)
        #self.graph1Widget.timer.timeout.connect(self.update_plot)
        self.graph1Widget.timer.start(100)
        self.graph1Widget.show()

        
        ''' self.graph1Layout = QtWidgets.QVBoxLayout(self.graph1Widget)
        self.canv = MatplotlibCanvas(self.graph1Widget)
        self.graph1Layout.addWidget(self.canv)'''
    


        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graph1Widget.sizePolicy().hasHeightForWidth())
        self.graph1Widget.setSizePolicy(sizePolicy)
        self.graph1Widget.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.graph1Widget.setMouseTracking(True)
        self.graph1Widget.setTabletTracking(True)
        self.graph1Widget.setAcceptDrops(True)
        self.graph1Widget.setAutoFillBackground(False)
        self.graph1Widget.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.graph1Widget.setObjectName("graph1Widget")
    
        self.horizontalLayout_2.addWidget(self.splitter)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout = QtWidgets.QGridLayout(self.frame)
        self.gridLayout.setObjectName("gridLayout")
        self.signal_color_button_graph_1 = QtWidgets.QPushButton(self.frame)
        self.signal_color_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.signal_color_button_graph_1.setMouseTracking(True)
        self.signal_color_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.signal_color_button_graph_1.setObjectName("signal_color_button_graph_1")
        self.gridLayout.addWidget(self.signal_color_button_graph_1, 1, 1, 1, 1)
        self.signal_name_lineEdit_graph_1 = QtWidgets.QLineEdit(self.frame)
        self.signal_name_lineEdit_graph_1.setStyleSheet("border-radius: 10px;\n"
"border-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.signal_name_lineEdit_graph_1.setObjectName("signal_name_lineEdit_graph_1")
        self.gridLayout.addWidget(self.signal_name_lineEdit_graph_1, 0, 1, 1, 1)
        self.visible_checkBox_graph_1 = QtWidgets.QCheckBox(self.frame)
        self.visible_checkBox_graph_1.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"\n"
"")
        self.visible_checkBox_graph_1.setObjectName("visible_checkBox_graph_1")
        self.gridLayout.addWidget(self.visible_checkBox_graph_1, 1, 0, 1, 1)
        self.signal_name_label_graph_1 = QtWidgets.QLabel(self.frame)
        self.signal_name_label_graph_1.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"")
        self.signal_name_label_graph_1.setObjectName("signal_name_label_graph_1")
        self.gridLayout.addWidget(self.signal_name_label_graph_1, 0, 0, 1, 1)
        self.horizontalLayout_2.addWidget(self.frame)
        self.gridLayout_4.addLayout(self.horizontalLayout_2, 3, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(15, -1, 275, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.graph_Label_2 = QtWidgets.QLabel(self.centralwidget)
        self.graph_Label_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 11pt \"Georgia\";\n"
"")
        self.graph_Label_2.setTextFormat(QtCore.Qt.PlainText)
        self.graph_Label_2.setObjectName("graph_Label_2")
        self.horizontalLayout_3.addWidget(self.graph_Label_2)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.play_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.play_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.play_button_graph_2.setMouseTracking(True)
        self.play_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.play_button_graph_2.setText("")
        self.icon = QtGui.QIcon()
        self.icon.addPixmap(QtGui.QPixmap(".\images\icons8-play-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.play_button_graph_2.setIcon(self.icon)
        self.play_button_graph_2.setObjectName("play_button_graph_2")
        self.horizontalLayout_3.addWidget(self.play_button_graph_2)
        self.stop_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.stop_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.stop_button_graph_2.setMouseTracking(True)
        self.stop_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.stop_button_graph_2.setText("")
        self.icon1 = QtGui.QIcon()
        self.icon1.addPixmap(QtGui.QPixmap(".\images\icons8-pause-button-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.stop_button_graph_2.setIcon(self.icon1)
        self.stop_button_graph_2.setObjectName("stop_button_graph_2")
        self.horizontalLayout_3.addWidget(self.stop_button_graph_2)
        self.pause_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pause_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.pause_button_graph_2.setMouseTracking(True)
        self.pause_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.pause_button_graph_2.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../icons/icons8-pause-90.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pause_button_graph_2.setIcon(icon2)
        self.pause_button_graph_2.setObjectName("pause_button_graph_2")
        self.horizontalLayout_3.addWidget(self.pause_button_graph_2)
        self.zoom_in_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.zoom_in_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.zoom_in_button_graph_2.setMouseTracking(True)
        self.zoom_in_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.zoom_in_button_graph_2.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../icons/icons8-zoom-in-64 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.zoom_in_button_graph_2.setIcon(icon3)
        self.zoom_in_button_graph_2.setObjectName("zoom_in_button_graph_2")
        self.horizontalLayout_3.addWidget(self.zoom_in_button_graph_2)
        self.connect_online_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.connect_online_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.connect_online_button_graph_2.setMouseTracking(True)
        self.connect_online_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.connect_online_button_graph_2.setText("Connect Online")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../icons/icons8-zoom-out-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.connect_online_button_graph_2.setIcon(icon4)
        self.connect_online_button_graph_2.setObjectName("connect_online_button_graph_2")
        self.horizontalLayout_3.addWidget(self.connect_online_button_graph_2)
        self.open_button_graph_2 = QtWidgets.QPushButton(self.centralwidget)
        self.open_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.open_button_graph_2.setMouseTracking(True)
        self.open_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.open_button_graph_2.setObjectName("open_button_graph_2")
        self.horizontalLayout_3.addWidget(self.open_button_graph_2)
        self.gridLayout_4.addLayout(self.horizontalLayout_3, 4, 0, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem2 = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.graph1Widget_3 = QtWidgets.QWidget(self.centralwidget)
        self.graph1Widget_3.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graph1Widget_3.sizePolicy().hasHeightForWidth())
        self.graph1Widget_3.setSizePolicy(sizePolicy)
        self.graph1Widget_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.graph1Widget_3.setMouseTracking(True)
        self.graph1Widget_3.setTabletTracking(True)
        self.graph1Widget_3.setAcceptDrops(True)
        self.graph1Widget_3.setAutoFillBackground(False)
        self.graph1Widget_3.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.graph1Widget_3.setObjectName("graph1Widget_3")
        self.horizontalLayout_6.addWidget(self.graph1Widget_3)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.signal_name_label_graph_3 = QtWidgets.QLabel(self.frame_3)
        self.signal_name_label_graph_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"")
        self.signal_name_label_graph_3.setObjectName("signal_name_label_graph_3")
        self.gridLayout_3.addWidget(self.signal_name_label_graph_3, 0, 0, 1, 1)
        self.signal_name_lineEdit_graph_3 = QtWidgets.QLineEdit(self.frame_3)
        self.signal_name_lineEdit_graph_3.setStyleSheet("border-radius: 10px;\n"
"border-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.signal_name_lineEdit_graph_3.setObjectName("signal_name_lineEdit_graph_3")
        self.gridLayout_3.addWidget(self.signal_name_lineEdit_graph_3, 0, 1, 1, 1)
        self.visible_checkBox_graph_3 = QtWidgets.QCheckBox(self.frame_3)
        self.visible_checkBox_graph_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"\n"
"")
        self.visible_checkBox_graph_3.setObjectName("visible_checkBox_graph_3")
        self.gridLayout_3.addWidget(self.visible_checkBox_graph_3, 1, 0, 1, 1)
        self.signal_color_button_graph_3 = QtWidgets.QPushButton(self.frame_3)
        self.signal_color_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.signal_color_button_graph_3.setMouseTracking(True)
        self.signal_color_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.signal_color_button_graph_3.setObjectName("signal_color_button_graph_3")
        self.gridLayout_3.addWidget(self.signal_color_button_graph_3, 1, 1, 1, 1)
        self.horizontalLayout_6.addWidget(self.frame_3)
        self.gridLayout_4.addLayout(self.horizontalLayout_6, 7, 0, 1, 1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setContentsMargins(15, -1, 275, -1)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.graph_Label_3 = QtWidgets.QLabel(self.centralwidget)
        self.graph_Label_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 11pt \"Georgia\";\n"
"")
        self.graph_Label_3.setTextFormat(QtCore.Qt.PlainText)
        self.graph_Label_3.setObjectName("graph_Label_3")
        self.horizontalLayout_5.addWidget(self.graph_Label_3)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem3)
        self.play_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.play_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.play_button_graph_3.setMouseTracking(True)
        self.play_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.play_button_graph_3.setText("")
        self.play_button_graph_3.setIcon(self.icon)
        self.play_button_graph_3.setObjectName("play_button_graph_3")
        self.horizontalLayout_5.addWidget(self.play_button_graph_3)
        self.stop_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.stop_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.stop_button_graph_3.setMouseTracking(True)
        self.stop_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.stop_button_graph_3.setText("")
        self.stop_button_graph_3.setIcon(self.icon1)
        self.stop_button_graph_3.setObjectName("stop_button_graph_3")
        self.horizontalLayout_5.addWidget(self.stop_button_graph_3)
        self.pause_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pause_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.pause_button_graph_3.setMouseTracking(True)
        self.pause_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.pause_button_graph_3.setText("")
        self.pause_button_graph_3.setIcon(icon2)
        self.pause_button_graph_3.setObjectName("pause_button_graph_3")
        self.horizontalLayout_5.addWidget(self.pause_button_graph_3)
        self.zoom_in_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.zoom_in_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.zoom_in_button_graph_3.setMouseTracking(True)
        self.zoom_in_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.zoom_in_button_graph_3.setText("")
        self.zoom_in_button_graph_3.setIcon(icon3)
        self.zoom_in_button_graph_3.setObjectName("zoom_in_button_graph_3")
        self.horizontalLayout_5.addWidget(self.zoom_in_button_graph_3)
        self.zoo_out_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.zoo_out_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.zoo_out_button_graph_3.setMouseTracking(True)
        self.zoo_out_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.zoo_out_button_graph_3.setText("")
        self.zoo_out_button_graph_3.setIcon(icon4)
        self.zoo_out_button_graph_3.setObjectName("zoo_out_button_graph_3")
        self.horizontalLayout_5.addWidget(self.zoo_out_button_graph_3)
        self.open_button_graph_3 = QtWidgets.QPushButton(self.centralwidget)
        self.open_button_graph_3.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.open_button_graph_3.setMouseTracking(True)
        self.open_button_graph_3.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.open_button_graph_3.setObjectName("open_button_graph_3")
        self.horizontalLayout_5.addWidget(self.open_button_graph_3)
        self.gridLayout_4.addLayout(self.horizontalLayout_5, 6, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem4 = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.graph2Widget = QtWidgets.QWidget(self.centralwidget)
        self.graph2Widget.setEnabled(True)
        
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graph2Widget.sizePolicy().hasHeightForWidth())
        self.graph2Widget.setSizePolicy(sizePolicy)
        self.graph2Widget.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.graph2Widget.setMouseTracking(True)
        self.graph2Widget.setTabletTracking(True)
        self.graph2Widget.setAcceptDrops(True)
        self.graph2Widget.setAutoFillBackground(False)
        self.graph2Widget.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.graph2Widget.setObjectName("graph2Widget")
        self.horizontalLayout_4.addWidget(self.graph2Widget)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setStyleSheet("background-color: rgb(45, 50, 77);\n"
"border-radius: 25px;\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"widget-shadow: 2px 2px 5px rgb(0, 0, 0);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.signal_name_label_graph_2 = QtWidgets.QLabel(self.frame_2)
        self.signal_name_label_graph_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"")
        self.signal_name_label_graph_2.setObjectName("signal_name_label_graph_2")
        self.gridLayout_2.addWidget(self.signal_name_label_graph_2, 0, 0, 1, 1)
        self.signal_name_lineEdit_graph_2 = QtWidgets.QLineEdit(self.frame_2)
        self.signal_name_lineEdit_graph_2.setStyleSheet("border-radius: 10px;\n"
"border-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.signal_name_lineEdit_graph_2.setObjectName("signal_name_lineEdit_graph_2")
        self.gridLayout_2.addWidget(self.signal_name_lineEdit_graph_2, 0, 1, 1, 1)
        self.visible_checkBox_graph_2 = QtWidgets.QCheckBox(self.frame_2)
        self.visible_checkBox_graph_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 10pt \"Georgia\";\n"
"\n"
"")
        self.visible_checkBox_graph_2.setObjectName("visible_checkBox_graph_2")
        self.gridLayout_2.addWidget(self.visible_checkBox_graph_2, 1, 0, 1, 1)
        self.signal_color_button_graph_2 = QtWidgets.QPushButton(self.frame_2)
        self.signal_color_button_graph_2.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.signal_color_button_graph_2.setMouseTracking(True)
        self.signal_color_button_graph_2.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.signal_color_button_graph_2.setObjectName("signal_color_button_graph_2")
        self.gridLayout_2.addWidget(self.signal_color_button_graph_2, 1, 1, 1, 1)
        self.horizontalLayout_4.addWidget(self.frame_2)
        self.gridLayout_4.addLayout(self.horizontalLayout_4, 5, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(15, -1, 275, -1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.graph_Label_1 = QtWidgets.QLabel(self.centralwidget)
        self.graph_Label_1.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: italic 11pt \"Georgia\";\n"
"")
        self.graph_Label_1.setTextFormat(QtCore.Qt.PlainText)
        self.graph_Label_1.setObjectName("graph_Label_1")
        self.horizontalLayout.addWidget(self.graph_Label_1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem5)
        self.play_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.play_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.play_button_graph_1.setMouseTracking(True)
        self.play_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.play_button_graph_1.setText("")
        self.play_button_graph_1.setIcon(self.icon)
        self.play_button_graph_1.setObjectName("play_button_graph_1")
        self.horizontalLayout.addWidget(self.play_button_graph_1)
        self.stop_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.stop_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.stop_button_graph_1.setMouseTracking(True)
        self.stop_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.stop_button_graph_1.setText("")
        self.stop_button_graph_1.setIcon(self.icon1)
        self.stop_button_graph_1.setObjectName("stop_button_graph_1")
        self.horizontalLayout.addWidget(self.stop_button_graph_1)
        self.pause_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pause_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.pause_button_graph_1.setMouseTracking(True)
        self.pause_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.pause_button_graph_1.setText("")
        self.pause_button_graph_1.setIcon(icon2)
        self.pause_button_graph_1.setObjectName("pause_button_graph_1")
        self.horizontalLayout.addWidget(self.pause_button_graph_1)
        self.zoom_in_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.zoom_in_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.zoom_in_button_graph_1.setMouseTracking(True)
        self.zoom_in_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.zoom_in_button_graph_1.setText("")
        self.zoom_in_button_graph_1.setIcon(icon3)
        self.zoom_in_button_graph_1.setObjectName("zoom_in_button_graph_1")
        self.horizontalLayout.addWidget(self.zoom_in_button_graph_1)
        self.connect_online_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.connect_online_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.connect_online_button_graph_1.setMouseTracking(True)
        self.connect_online_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 15px;")
        self.connect_online_button_graph_1.setText("Connect Online")
        #self.connect_online_button_graph_1.setIcon(icon4)
        self.connect_online_button_graph_1.setObjectName("connect_online_button_graph_1")
        self.horizontalLayout.addWidget(self.connect_online_button_graph_1)
        self.open_button_graph_1 = QtWidgets.QPushButton(self.centralwidget)
        self.open_button_graph_1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.open_button_graph_1.setMouseTracking(True)
        self.open_button_graph_1.setStyleSheet("font: italic 10pt \"Georgia\";\n"
"font: 12pt \"Georgia\";\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(120, 207, 233);\n"
"buttoon-shadow: 2px 2px 5px rgb(0, 0, 0);\n"
"border-radius: 10px;")
        self.open_button_graph_1.setObjectName("open_button_graph_1")
        self.horizontalLayout.addWidget(self.open_button_graph_1)
        self.gridLayout_4.addLayout(self.horizontalLayout, 2, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem6 = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem6)
        self.signalViewerLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.signalViewerLabel.sizePolicy().hasHeightForWidth())
        self.signalViewerLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft PhagsPa")
        font.setPointSize(20)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.signalViewerLabel.setFont(font)
        self.signalViewerLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 75 20pt \"Microsoft PhagsPa\";")
        self.signalViewerLabel.setTextFormat(QtCore.Qt.PlainText)
        self.signalViewerLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.signalViewerLabel.setObjectName("signalViewerLabel")
        self.verticalLayout.addWidget(self.signalViewerLabel)
        self.gridLayout_4.addLayout(self.verticalLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #self.open_button_graph_1.clicked.connect(self.open_file)

    '''def plot_signal(self, signal_data):

        if signal_data is not None:
            # Clear previous plots
            self.graph1Widget.clear()
            
            # Plot each channel in the signal data
            for i, signal in enumerate(signal_data):
                self.graph1Widget.plot(signal, pen=pg.mkPen(color=(i * 50, 100, 200), width=2), label=f'Signal {i+1}')  # Use different colors for each signal
            self.graph1Widget.addLegend()  # Add a legend to the graph

    def load_edf_file(self, file_path):
        """Load the signal data from an EDF file."""
        try:
            with pyedflib.EdfReader(file_path) as edf_reader:
                signal_data = [edf_reader.readSignal(i) for i in range(edf_reader.signals_in_file)]
            return signal_data  # Return the loaded signal data
        except Exception as e:
            print(f"Error loading EDF file: {e}")
            return None  # Return None if there's an error

    def open_file(self):
        """Open a file dialog to select an EDF file and plot its signals."""
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open EDF File", "", "EDF Files (*.edf);;All Files (*)")
        if file_path:
            self.signal_data = self.load_edf_file(file_path)
            if self.signal_data is not None:
                self.plot_signal(self.signal_data)  # Plot the loaded signal data
                self.timer.start(1000)  # Start the timer for real-time updates

    def update_plot(self):
        """Update the plot (this can be expanded for real-time behavior)."""
        if self.signal_data is not None:
            # You can add real-time update logic here if needed
            # For now, we will just refresh the plot
            self.plot_signal(self.signal_data)'''

    





    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.signal_color_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.signal_color_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.signal_color_button_graph_1.setText(_translate("MainWindow", "Signal\'s Color"))
        self.visible_checkBox_graph_1.setText(_translate("MainWindow", "Visible"))
        self.signal_name_label_graph_1.setText(_translate("MainWindow", "Signal\'s Name"))
        self.graph_Label_2.setText(_translate("MainWindow", "Graph 2"))
        self.play_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.play_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.stop_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.stop_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.pause_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.pause_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.zoom_in_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.zoom_in_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.connect_online_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.connect_online_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.open_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_2.setText(_translate("MainWindow", "Open"))
        self.signal_name_label_graph_3.setText(_translate("MainWindow", "Signal\'s Name"))
        self.visible_checkBox_graph_3.setText(_translate("MainWindow", "Visible"))
        self.signal_color_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.signal_color_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.signal_color_button_graph_3.setText(_translate("MainWindow", "Signal\'s Color"))
        self.graph_Label_3.setText(_translate("MainWindow", "Graph 3"))
        self.play_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.play_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.stop_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.stop_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.pause_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.pause_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.zoom_in_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.zoom_in_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.zoo_out_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.zoo_out_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_3.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.open_button_graph_3.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_3.setText(_translate("MainWindow", "Open"))
        self.signal_name_label_graph_2.setText(_translate("MainWindow", "Signal\'s Name"))
        self.visible_checkBox_graph_2.setText(_translate("MainWindow", "Visible"))
        self.signal_color_button_graph_2.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.signal_color_button_graph_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.signal_color_button_graph_2.setText(_translate("MainWindow", "Signal\'s Color"))
        self.graph_Label_1.setText(_translate("MainWindow", "Graph 1"))
        self.play_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.play_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.stop_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.stop_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.pause_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.pause_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.zoom_in_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.zoom_in_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.connect_online_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.connect_online_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_1.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.open_button_graph_1.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">)pen</span></p></body></html>"))
        self.open_button_graph_1.setText(_translate("MainWindow", "Open"))
        self.signalViewerLabel.setText(_translate("MainWindow", "Live Signal Viewer"))

"""
class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)  # Set up the UI
        self.timer = QTimer()  # Create a timer
        self.ui.open_button_graph_1.clicked.connect(self.open_file)  # Connect button
        self.timer.timeout.connect(self.update_plot)

    def load_csv_file(self, file_path):
        try:
            with open(file_path, newline='') as csvfile:
                reader = csv.reader(csvfile)
                self.signal_data = []
                for row in reader:
                    self.signal_data.append([float(val) for val in row])  # Convert string to float

                # Transpose the data to get columns as signals
                self.signal_data = list(map(list, zip(*self.signal_data)))

                self.current_signal_index = 0  # Reset index to start from the beginning
                self.timer.start(1)  # Start the timer for real-time plotting (adjust time as needed)
        except Exception as e:
            print(f"Error loading CSV file: {e}")
            return None

    def plot_signal(self, signal_data):
        # Implement your plotting logic here
        if signal_data is not None:
            # Plot each channel in the signal data
            for i, signal in enumerate(signal_data):
                self.ui.graph1Widget.graph.plotItem.plot(signal, 
                                                         pen=pg.mkPen(color=(i * 50, 100, 200), width=2), 
                                                         label=f'Signal {i+1}')  # Use different colors for each signal

    def update_plot(self):
        # This function will be called by the timer
        if self.signal_data is not None:
            x_values = []
            y_values = []
            
            for i, signal in enumerate(self.signal_data):
                if self.current_signal_index < len(signal):
                    x_values.append(self.current_signal_index)  # X-coordinate
                    y_values.append(signal[self.current_signal_index])  # Y-coordinate

            if x_values:  # Check if there are values to plot
                self.ui.graph1Widget.graph.plotItem.plot(x_values, y_values, 
                                          pen=pg.mkPen(color=(i * 50, 100, 200), width=2), 
                                          symbol='o', 
                                          symbolSize=5)  # Optional: Use symbol to indicate points

            self.current_signal_index += 1  # Move to the next data point

            if self.current_signal_index >= len(self.signal_data[0]):  # Check if we've plotted all points
                self.timer.stop()   # Stop the timer when all data is plotted

    def open_file(self):
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open CSV File", "", "CSV Files (*.csv);;All Files (*)")
        if file_path:
            self.load_csv_file(file_path)
            

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec_())
"""